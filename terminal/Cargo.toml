[package]
name = "terrazzo-terminal"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }
license = { workspace = true }
description = "A simple web-based terminal emulator built on Terrazzo."
readme = "README.md"
categories = ["command-line-utilities", "wasm"]
keywords = ["terrazzo", "terminal", "wasm"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "terrazzo-terminal"
path = "src/server.rs"
required-features = ["server"]

[dependencies]
clap = { workspace = true, optional = true }
dashmap = { workspace = true, optional = true }
futures = { workspace = true }
jsonwebtoken = { workspace = true, optional = true }
nameth = { workspace = true }
nix = { workspace = true, optional = true, features = ["signal"] }
openssl = { workspace = true, optional = true }
pin-project = { workspace = true }
prost = { workspace = true, optional = true }
prost-types = { workspace = true, optional = true }
scopeguard = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
static_assertions = { workspace = true, optional = true }
stylance = { workspace = true, optional = true }
terrazzo = { workspace = true }
terrazzo-pty = { workspace = true, optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, optional = true, features = ["full"] }
tonic = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true, features = [
    "auth",
    "fs",
    "sensitive-headers",
    "trace",
] }
tracing = { workspace = true }
tracing-futures = { workspace = true, features = ["futures-03"] }
trz-gateway-client = { workspace = true, optional = true }
trz-gateway-common = { workspace = true, optional = true }
trz-gateway-server = { workspace = true, optional = true }
uuid = { workspace = true, optional = true, features = ["v4", "fast-rng"] }
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
wasm-streams = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true, features = [
    "DataTransfer",
    "Document",
    "DragEvent",
    "Element",
    "FocusEvent",
    "Headers",
    "HtmlInputElement",
    "MouseEvent",
    "Performance",
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "Window",
] }

[build-dependencies]
scopeguard = { workspace = true }
terrazzo-build = { workspace = true }
tonic-build = { workspace = true, features = ["prost"] }

[features]
default = ["server", "max_level_info"]
client = [
    "dep:stylance",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "dep:wasm-streams",
    "dep:web-sys",
    "terrazzo/client",
]
server = [
    "dep:clap",
    "dep:dashmap",
    "dep:jsonwebtoken",
    "dep:nix",
    "dep:openssl",
    "dep:prost-types",
    "dep:prost",
    "dep:static_assertions",
    "dep:terrazzo-pty",
    "dep:tokio",
    "dep:tonic",
    "dep:tower-http",
    "dep:trz-gateway-client",
    "dep:trz-gateway-common",
    "dep:trz-gateway-server",
    "dep:uuid",
    "terrazzo/server",
]
max_level_debug = ["tracing/max_level_debug", "tracing/release_max_level_debug"]
max_level_info = [
    "tracing/max_level_info",
    "tracing/release_max_level_info",
    "concise_traces",
]
concise_traces = ["terrazzo/concise_traces"]
no_wasm_build = []

[package.metadata.stylance]
output_file = "./target/css/terrazzo-terminal.scss"
folders = ["./src/"]
extensions = [".scss", ".css"]

[lints]
workspace = true
